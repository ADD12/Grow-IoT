{"version":3,"file":"test-bundle.js","sources":["../test/setup/node.js","../lib/thing.js","../test/unit/thing-test.js"],"sourcesContent":["global.expect = require('chai').expect;\n\nrequire('babel/register');\n\n(function setup () {\n  beforeEach(function() {\n\n    // Setup test things\n    global.thing1 = {\n      'name': 'Light',\n      'description': 'An LED light with a basic on/off api.',\n      'state': 'off',\n      'actions': [\n        {\n          'name': 'On',\n          'description': 'Turns the light on.',\n          'id': 'turn_light_on',\n          'updateState': 'on',\n          'schedule': 'at 9:00am',\n          'event': 'Light turned on',\n          'function': function () {\n            return 'Light on.';\n          }\n        },\n        {\n          'name': 'off',\n          'id': 'turn_light_off',\n          'updateState': 'off',\n          'schedule': 'at 8:30pm',\n          'event': 'Light turned off',\n          'function': function () {\n            return 'Light off.';\n          }\n        },\n        {\n          'name': 'Light data',\n          'id': 'light_data',\n          'type': 'light',\n          'schedule': 'every 1 second',\n          'function': function () {\n            // Normally, this would be publishing data on the readable stream.\n            return 'data';\n          }\n        }\n      ],\n      'events': [\n        {\n          'name': 'light data is data',\n          'id': 'check_light_data',\n          'on': 'light_data', // Hook into an action.\n          'function': () => {\n            return 'this';\n          }\n        }\n      ]\n    };\n  });\n\n  afterEach(function() {\n    delete global.thing1;\n  });\n})();\n","const _ = require('underscore');\nconst later = require('later');\nconst EventEmitter = require('events');\n\nclass Thing extends EventEmitter {\n  /**\n   * Constructs a new thing object.\n   * @param {Object} config\n   * @return     A new thing object\n  */\n  constructor(config) {\n    super();\n\n    if (!config) {\n      throw new Error('Thing.js requires an config object.');\n    } else {\n      _.extend(this, config);\n    }\n\n    // Register actions events\n    this.registerActions();\n    this.registerEvents();\n  }\n\n  /**\n   * Registers actions and starts any scheduled actions.\n   */\n  registerActions () {\n    this.scheduledActions = [];\n\n    for (var action in this.actions) {\n      // TODO:\n      // Through error if no id is assigned?\n      // or perhaps generate id?\n      var actionId = this.actions[action].id;\n      \n      if (!_.isUndefined(action)) {\n        this.startAction(this.actions[action]);\n      }\n    }\n  }\n\n  /**\n   * Register a events and setup listeners.\n   */\n  registerEvents () {\n    this.scheduledEvents = [];\n\n    // Check top level thing model for events.\n    if (!_.isUndefined(this.events)) {\n      for (var event in this.events) {\n        event = this.events[event];\n        \n        if (!_.isUndefined(event.schedule)) {\n          this.scheduleEvent(event);\n        }\n        \n        this.on(event.on, () => {\n          event.function();\n        });\n      }\n    }\n  }\n\n  /**\n   * Get component object based on the id\n   * @param {String} ID  The id of the component object you want.\n   * @returns {Object}\n   */\n  getComponentByID (ID) {\n    // Check top level component\n    if (this.id === ID) {\n      return this;\n    }\n\n    // Check action and event components\n    else {\n      return _.findWhere(this.actions, {id: ID}) || _.findWhere(this.events, {id: ID});\n    }\n  }\n\n  /**\n   * Update a property based on a component ID.\n   * @param {String} componentID The id of the component to change the property of.\n   * @param {String} property The property of the component to be update.\n   * @param {String} value The value to update the property to.\n   * @param {function} callback an optional callback function\n   */\n  updateProperty (componentID, property, value) {\n    var component = this.getComponentByID(componentID);\n    return component[property] = value;\n  }\n\n  /**\n   * Calls a registered action, emits event if the the action has an 'event'\n   * property defined. Updates the state if the action has an 'updateState'\n   * property specified.\n   * @param      {String}  actionId The id of the action to call.\n   * @param      {Object}  options Optional, options to call with the function.\n   */\n  callAction (actionId, options) {\n    try {\n      var action = this.getComponentByID(actionId);\n\n      if (!_.isUndefined(options)) {\n        var output = action.function(options);\n      }\n      else {\n        var output = action.function();\n      }\n      this.emit(actionId);\n\n      // We return any returns of called functions for testing.\n      if (!_.isUndefined(output)) {\n        return output;\n      }\n    }\n    catch (error) {\n      // If there is an error we emit an error.\n      return this.emit('error', error);\n    }\n\n  }\n\n  /**\n   * Starts a reoccurring action if a schedule property is defined.\n   * @param {Object} action An action object.\n   */\n  startAction (action) {\n    // do we need to make the redundent call to getActionByID?\n    var schedule = later.parse.text(action.schedule);\n    var scheduledAction = later.setInterval(()=> {this.callAction(action.id);}, schedule);\n    this.scheduledActions.push(scheduledAction);\n    return scheduledAction;\n  }\n\n  /**\n   * Starts a reoccurring event if a schedule property is defined.\n   * @param {Object} event An event object.\n   */\n  scheduleEvent (event) {\n    var schedule = later.parse.text(event.schedule);\n    var scheduledEvent = later.setInterval(()=> {this.callEvent(event.id);}, schedule);\n    this.scheduledEvents.push(scheduledEvent);\n    return scheduledEvent;\n  }\n};\n\nexport default Thing;\n","import Thing from '../../lib/thing';\n\n/*\n  TODO:\n  * update property\n*/\n\ndescribe('Thing test', () => {\n  beforeEach(() => {\n    global.testThing = new Thing(thing1);\n  });\n\n  it('should have been constructed correctly', () => {\n    // console.log(testThing);\n    expect(testThing.name).to.equal('Light');\n    expect(testThing.description).to.equal('An LED light with a basic on/off api.');\n  });\n\n  it('should register actions in the config object', () => {\n    expect(testThing.actions.length).to.equal(3);\n  });\n\n  it('should register events in the config object', () => {\n    expect(testThing.events.length).to.equal(1);\n  });\n\n  it('should return the right action object when given an action id.', () => {\n    var action = testThing.getComponentByID('light_data');\n    expect(action.name).to.equal('Light data');\n  });\n\n  it('should return the right event object when given an id.', () => {\n    var component = testThing.getComponentByID('check_light_data');\n    expect(component.name).to.equal('light data is data');\n  });\n\n  it('should be able to call a registered action.', () => {\n    expect(testThing.callAction('turn_light_on')).to.equal('Light on.');\n  });\n\n  it('should update a component property correctly', () => {\n    testThing.updateProperty('turn_light_on', 'schedule', 'at 9:30am')\n    expect(testThing.getComponentByID('turn_light_on').schedule).to.equal('at 9:30am');\n  });\n\n  it('should emit an event when an action is called', () => {\n    var event = false;\n    testThing.on('turn_light_on', () => {\n      return event = true;\n    });\n    testThing.callAction('turn_light_on');\n    expect(event).to.equal(true);\n  });\n\n  afterEach(() => {\n    delete global.testThing;\n  });\n});\n"],"names":[],"mappings":"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"}