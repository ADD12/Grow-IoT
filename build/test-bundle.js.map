{"version":3,"file":"test-bundle.js","sources":["../test/setup/node.js","../lib/thing.js","../test/unit/thing-test.js"],"sourcesContent":["global.expect = require('chai').expect;\n\n// require('babel/register');\n\n(function setup () {\n  beforeEach(function() {\n\n    // Setup test things\n    global.thing1 = {\n      'name': 'Light',\n      'description': 'An LED light with a basic on/off api.',\n      'state': 'off',\n      'actions': [\n        {\n          'name': 'On',\n          'description': 'Turns the light on.',\n          'id': 'turn_light_on',\n          'updateState': 'on',\n          'schedule': 'at 9:00am',\n          'event': 'Light turned on',\n          'function': function () {\n            return 'Light on.';\n          }\n        },\n        {\n          'name': 'off',\n          'id': 'turn_light_off',\n          'updateState': 'off',\n          'schedule': 'at 8:30pm',\n          'event': 'Light turned off',\n          'function': function () {\n            return 'Light off.';\n          }\n        },\n        {\n          'name': 'Light data',\n          'id': 'light_data',\n          'type': 'light',\n          'schedule': 'every 1 second',\n          'function': function () {\n            // Normally, this would be publishing data on the readable stream.\n            return 'data';\n          }\n        }\n      ],\n      'events': [\n        {\n          'name': 'light data is data',\n          'id': 'check_light_data',\n          'on': 'light_data', // Hook into an action.\n          'function': () => {\n            return 'this';\n          }\n        },\n        {\n          name: 'Change light bulb event',\n          id: 'change_light_bulb',\n          schedule: 'after 10 seconds' // Emits this event in 30s \n        }\n      ]\n    };\n\n    global.thing2 = {\n        name: \"Light\", // The display name for the thing.\n        id: \"Light\",\n        desription: \"An LED light with a basic on/off api.\",\n        username: \"jakehart\", // The username of the account you want this device to be added to.\n        properties: {\n            state: \"off\",\n            lightconditions: null\n        },\n        actions: [ // A list of action objects\n            {\n                name: \"On\", // Display name for the action\n                description: \"Turns the light on.\", // Optional description\n                id: \"turn_light_on\", // A unique id\n                schedule: \"at 9:00am\", // Optional scheduling using later.js\n                event: \"Light turned on\", // Optional event to emit when called.\n                function: function () {\n                    // The implementation of the action.\n                    LED.high();\n                    grow.updateProperty('state', 'on');\n                }\n            },\n            {\n                name: \"off\",\n                id: \"turn_light_off\",\n                schedule: \"at 8:30pm\",\n                event: \"Light turned off\",\n                function: function () {\n                    LED.low();\n                    grow.updateProperty('state', 'off');\n                }\n            },\n            {\n                name: \"Log light data\", // Events get a display name like actions\n                id: \"light_data\", // Events also get an id that is unique to the device\n                type: \"light\", // Currently need for visualization component... HACK.\n                template: \"sensor\",\n                schedule: \"every 1 second\", // Events should have a schedule option that determines how often to check for conditions.\n                function: function () {\n                    // function should return the event to emit when it should be emited.\n                    grow.sendData({\n                      type: \"light\",\n                      value: lightSensor.value\n                    });\n                }\n            }\n        ],\n        events: [\n            {\n                name: \"It's dark.\",\n                id: 'dark',\n                on: 'light_data', // Hook into an action.\n                function: function () {\n                    if (lightSensor.value < 100 && grow.getProperty('lightconditions') != 'dark') {\n                        grow.emitEvent('dark');\n                        grow.setProperty('lightconditions', 'dark');\n                    }\n                }\n            }\n        ]\n    };\n\n  });\n\n  afterEach(function() {\n    delete global.thing1;\n    delete global.thing2;\n  });\n})();\n","const _ = require('underscore');\nconst later = require('later');\nconst EventEmitter = require('events');\n\nclass Thing extends EventEmitter {\n  /**\n   * Constructs a new Thing object. A Thing is an extension of [node's built-in \n     EventEmitter class](https://nodejs.org/api/events.html).\n   * @param {Object} config a javascript object containing metadata, properties, events, and actions\n   * @return     A new thing object\n  */\n  constructor(config) {\n    super();\n\n    if (!config) {\n      throw new Error('Thing.js requires an config object.');\n    } else {\n      _.extend(this, config);\n    }\n\n    this.registerActions();\n    this.registerEvents();\n  }\n\n  /**\n   * Starts any scheduled actions.\n   * Todo: should also throw errors if actions don't have IDs or functions.\n   */\n  registerActions () {\n    this.scheduledActions = [];\n\n    for (var action in this.actions) {\n      // TODO:\n      // Through error if no id is assigned?\n      // or perhaps generate id?\n      var actionId = this.actions[action].id;\n      \n      if (!_.isUndefined(action)) {\n        this.startAction(this.actions[action]);\n      }\n    }\n  }\n\n  /**\n   * Starts listeners and scheduled events.\n   * Todo: this needs better testing.\n   */\n  registerEvents () {\n    this.scheduledEvents = [];\n\n    // Check top level thing model for events.\n    if (!_.isUndefined(this.events)) {\n      for (var event in this.events) {\n        event = this.events[event];\n        \n        if (!_.isUndefined(event.schedule)) {\n          this.scheduleEvent(event);\n        }\n\n        if (!_.isUndefined(event.on)) {\n          this.on(event.on, () => {\n            event.function();\n          });\n        }\n      }\n    }\n  }\n\n  /**\n   * Get component object (an action or event for example) based on the id\n   * @param {String} ID  The id of the component object you want.\n   * @returns {Object}\n   */\n  getComponentByID (ID) {\n    // Check top level component\n    if (this.id === ID) {\n      return this;\n    }\n\n    // Check action and event components\n    else {\n      return _.findWhere(this.actions, {id: ID}) || _.findWhere(this.events, {id: ID});\n    }\n  }\n\n  /**\n   * Update a property based on a component ID.\n   * @param {String} componentID The id of the component to change the property of.\n   * @param {String} property The property of the component to be update.\n   * @param {String} value The value to update the property to.\n   */\n  updateComponentProperty (componentID, property, value) {\n    var component = this.getComponentByID(componentID);\n    return component[property] = value;\n  }\n\n  /**\n   * Update a property based on a component ID.\n   * @param {String} property The property of the component to be update.\n   * @param {String} value The value to update the property to.\n   */\n  setProperty (property, value) {\n    return this.properties[property] = value;\n  }\n\n  /* Get a property by name.\n   * @param {String} property\n   * @returns {String} property value.\n   */\n  getProperty (property) {\n    console.log(this.properties);\n    return this.properties[property];\n  }\n\n  /**\n   * Calls a registered action, emits event if the the action has an 'event'\n   * property defined. Updates the state if the action has an 'updateState'\n   * property specified.\n   * @param      {String}  actionId The id of the action to call.\n   * @param      {Object}  options Optional, options to call with the function.\n   */\n  callAction (actionId, options) {\n    try {\n      var action = this.getComponentByID(actionId);\n\n      if (!_.isUndefined(options)) {\n        var output = action.function(options);\n      }\n      else {\n        var output = action.function();\n      }\n      this.emit(actionId);\n\n      // We return any returns of called functions for testing.\n      if (!_.isUndefined(output)) {\n        return output;\n      }\n    }\n    catch (error) {\n      // If there is an error we emit an error.\n      return this.emit('error', error);\n    }\n\n  }\n\n  /**\n   * Starts a reoccurring action if a schedule property is defined.\n   * @param {Object} action An action object.\n   */\n  startAction (action) {\n    var schedule = later.parse.text(action.schedule);\n    var scheduledAction = later.setInterval(()=> {this.callAction(action.id);}, schedule);\n    this.scheduledActions.push(scheduledAction);\n    return scheduledAction;\n  }\n\n  /**\n   * Starts a reoccurring event if a schedule property is defined.\n   * @param {Object} event An event object.\n   */\n  scheduleEvent (event) {\n    var schedule = later.parse.text(event.schedule);\n    var scheduledEvent = later.setInterval(()=> {this.callEvent(event.id);}, schedule);\n    this.scheduledEvents.push(scheduledEvent);\n    return scheduledEvent;\n  }\n};\n\nexport default Thing;\n","import Thing from '../../lib/thing';\n\n/*\n  TODO:\n  * update property\n*/\n\ndescribe('Thing test', () => {\n  beforeEach(() => {\n    global.testThing = new Thing(thing1);\n    global.testThing2 = new Thing(thing2);\n  });\n\n  it('should have cloned metadata', () => {\n    expect(testThing.name).to.equal('Light');\n    expect(testThing.description).to.equal('An LED light with a basic on/off api.');\n  });\n\n  describe('ACTIONS', () => {\n    it('should register actions in the config object', () => {\n      expect(testThing.actions.length).to.equal(3);\n    });\n\n    it('should return the right action object when given an action id.', () => {\n      var action = testThing.getComponentByID('light_data');\n      expect(action.name).to.equal('Light data');\n    });\n\n    it('should be able to call a registered action.', () => {\n      expect(testThing.callAction('turn_light_on')).to.equal('Light on.');\n    });\n\n    it('should emit an event when an action is called', () => {\n      var event = false;\n      testThing.on('turn_light_on', () => {\n        return event = true;\n      });\n      testThing.callAction('turn_light_on');\n      expect(event).to.equal(true);\n    });\n  });\n\n  describe('EVENTS', () => {\n    it('should register events in the config object', () => {\n      expect(testThing.events.length).to.equal(2);\n    });\n\n    it('should return the right event object when given an id.', () => {\n      var component = testThing.getComponentByID('check_light_data');\n      expect(component.name).to.equal('light data is data');\n    });\n  });\n\n  describe('PROPERTIES', () => {\n    it('should update a component property correctly', () => {\n      testThing.updateComponentProperty('turn_light_on', 'schedule', 'at 9:30am')\n      expect(testThing.getComponentByID('turn_light_on').schedule).to.equal('at 9:30am');\n    });\n\n    // Note: testThing 2 is experimental\n    it('should return the currect property', () => {\n      // console.log(thing2);\n      expect(testThing2.getProperty('lightconditions')).to.equal(null);\n    });\n\n    it('should set a property', () => {\n      // console.log(thing2);\n      testThing2.setProperty('lightconditions', 'dark');\n      expect(testThing2.getProperty('lightconditions')).to.equal('dark');\n    });\n\n  });\n\n  afterEach(() => {\n    delete global.testThing;\n  });\n});\n"],"names":[],"mappings":"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"}