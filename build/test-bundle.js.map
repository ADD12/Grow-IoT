{"version":3,"file":"test-bundle.js","sources":["../test/setup/node.js","../lib/thing.js","../test/unit/thing-test.js"],"sourcesContent":["global.expect = require('chai').expect;\n\nrequire('babel/register');\n\n(function setup () {\n  beforeEach(function() {\n\n    // Setup test things\n    global.thing1 = {\n      'name': 'Light',\n      'description': 'An LED light with a basic on/off api.',\n      'state': 'off',\n      'actions': [\n        {\n          'name': 'On',\n          'description': 'Turns the light on.',\n          'id': 'turn_light_on',\n          'updateState': 'on',\n          'schedule': 'at 9:00am',\n          'event': 'Light turned on',\n          'function': function () {\n            return 'Light on.';\n          }\n        },\n        {\n          'name': 'off',\n          'id': 'turn_light_off',\n          'updateState': 'off',\n          'schedule': 'at 8:30pm',\n          'event': 'Light turned off',\n          'function': function () {\n            return 'Light off.';\n          }\n        },\n        {\n          'name': 'Light data',\n          'id': 'light_data',\n          'type': 'light',\n          'schedule': 'every 1 second',\n          'function': function () {\n            // Normally, this would be publishing data on the readable stream.\n            return 'data';\n          }\n        }\n      ],\n      'events': [\n        {\n          'name': 'light data is data',\n          'id': 'check_light_data',\n          'on': 'light_data', // Hook into an action.\n          'function': () => {\n            return 'this';\n          }\n        }\n      ]\n    };\n  });\n\n  afterEach(function() {\n    delete global.thing1;\n  });\n})();\n","const _ = require('underscore');\nconst later = require('later');\nconst EventEmitter = require('events');\n\nclass Thing extends EventEmitter {\n  /**\n   * Constructs a new thing object.\n   * @param {Object} config\n   * @return     A new thing object\n  */\n  constructor(config) {\n    super();\n\n    if (!config) {\n      throw new Error('Thing.js requires an config object.');\n    } else {\n      _.extend(this, config);\n    }\n\n    // Register actions events\n    this.registerActions();\n    this.registerEvents();\n  }\n\n  /**\n   * Registers actions and starts any scheduled actions.\n   */\n  registerActions () {\n    this.scheduledActions = [];\n\n    for (var action in this.actions) {\n      var actionId = this.actions[action].id;\n      var action = this.getActionByID(actionId);\n      if (!_.isUndefined(action)) {\n        this.startAction(actionId);\n      }\n    }\n  }\n\n  /**\n   * Register a events and setup listeners.\n   */\n  registerEvents () {\n    this.scheduledEvents = [];\n\n    // Check top level thing model for events.\n\n    // TODO: don't do this with a for loop. Just check this.events.\n    for (var key in this) {\n      if (key === 'events') {\n        for (var event in this[key]) {\n          event = this[key][event];\n          this.on(event.on, () => {\n            event.function();\n          });\n        }\n      }\n    }\n\n    for (var event in this.events) {\n      var eventId = this.events[event].id;\n      // this is silly, because it's called both here and in startEvent...\n      var event = this.getEventByID(eventId);\n      if (!_.isUndefined(event)) {\n        this.startEvent(eventId);\n      }\n    }\n  }\n\n  /**\n   * Get action object based on the action id\n   * @param {String} actionId  The id of the action object you want.\n   * @returns {Object}\n   */\n  getActionByID (actionId) {\n    // Todo, check to make sure actions ex\n\n    for (var i = this.actions.length - 1; i >= 0; i--) {\n      if (this.actions[i].id === actionId) {\n        return this.actions[i];\n      }\n    }\n  }\n\n  /**\n   * Calls a registered action, emits event if the the action has an 'event'\n   * property defined. Updates the state if the action has an 'updateState'\n   * property specified.\n   * @param      {String}  actionId The id of the action to call.\n   * @param      {Object}  options Optional, options to call with the function.\n  */\n  callAction (actionId, options) {\n    var action = this.getActionByID(actionId);\n\n    this.emit(actionId)\n\n    if (!_.isUndefined(options)) {\n      return action.function(options);\n    }\n    else {\n      return action.function();\n    }\n  }\n\n  /**\n   * Starts a reoccurring action if a schedule property is defined.\n   * @param {Object} action An action object.\n   */\n  startAction (action) {\n    // do we need to make the redundent call to getActionByID?\n    var meta = this.getActionByID(action);\n    if (!_.isUndefined(meta.schedule)) {\n      var schedule = later.parse.text(meta.schedule);\n      var scheduledAction = later.setInterval(()=> {this.callAction(action);}, schedule);\n      this.scheduledActions.push(scheduledAction);\n      return scheduledAction;\n    }\n  }\n\n  /**\n   * Get event object based on the event id\n   * @param {String} eventId  The id of the event object you want.\n   * @returns {Object}\n   */\n  getEventByID (eventId) {\n    for (var i = this.events.length - 1; i >= 0; i--) {\n      if (this.events[i].id === eventId) {\n        return this.events[i];\n      }\n    }\n  }\n\n\n  // This was a hack... delete?\n  /**\n   * Calls a registered event function.\n   * @param      {String}  eventId The id of the event to call.\n   * @param      {Object}  options Optional, options to call with the function.\n  */\n  callEvent (eventId, options) {\n    var event = this.getEventByID(eventId);\n\n    this.emit(eventId);\n\n    if (!_.isUndefined(options)) {\n      return event.function(options);\n    }\n    else {\n      return event.function();\n    }\n  }\n\n  /**\n   * Starts a reoccurring event if a schedule property is defined.\n   * @param {Object} event An event object.\n   */\n  startEvent (event) {\n    var meta = this.getEventByID(event);\n    if (!_.isUndefined(meta.schedule)) {\n      var schedule = later.parse.text(meta.schedule);\n      var scheduledEvent = later.setInterval(()=> {this.callEvent(event);}, schedule);\n      this.scheduledEvents.push(scheduledEvent);\n      return scheduledEvent;\n    }\n  }\n};\n\nexport default Thing;\n","import Thing from '../../lib/thing';\n\n/*\n  TODO:\n  * update property\n*/\n\ndescribe('Thing test', () => {\n  beforeEach(() => {\n    global.testThing = new Thing(thing1);\n  });\n\n  it('should have been constructed correctly', () => {\n    // console.log(testThing);\n    expect(testThing.name).to.equal('Light');\n    expect(testThing.description).to.equal('An LED light with a basic on/off api.');\n  });\n\n  it('should register actions in the config object', () => {\n    expect(testThing.actions.length).to.equal(3);\n  });\n\n  it('should register events in the config object', () => {\n    expect(testThing.events.length).to.equal(1);\n  });\n\n  it('should return the right action object when given an action id.', () => {\n    var action = testThing.getActionByID('light_data');\n    expect(action.name).to.equal('Light data');\n  });\n\n  it('should return the right event object when given an event id.', () => {\n    var event = testThing.getEventByID('check_light_data');\n    expect(event.name).to.equal('light data is data');\n  });\n\n  it('should be able to call a registered action.', () => {\n    expect(testThing.callAction('turn_light_on')).to.equal('Light on.');\n  });\n\n  it('should emit an event when an action is called', () => {\n    var event = false;\n    testThing.on('turn_light_on', () => {\n      return event = true;\n    });\n    testThing.callAction('turn_light_on');\n    expect(event).to.equal(true);\n  });\n\n  // This test is not working properly...\n  it('events should register properly', () => {\n    // var event = false;\n    // testThing.on('turn_light_on', () => {\n    //   return event = true;\n    // });\n    testThing.callAction('light_data');\n    // expect(event).to.equal(true);\n  });\n\n  afterEach(() => {\n    delete global.testThing;\n  });\n});\n"],"names":[],"mappings":"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"}