{"version":3,"file":"test-bundle.js","sources":["../test/setup/node.js","../lib/Thing.js","../test/unit/thing-test.js"],"sourcesContent":["global.expect = require('chai').expect;\n\n// require('babel/register');\n\n(function setup () {\n  beforeEach(function() {\n\n    global.thing1 = {\n      name: 'Light', // The display name for the thing.\n      id: 'Light',\n      username: 'YourUsernameHere', // The username of the account you want this device to be added to.\n      properties: {\n        state: 'off',\n        lightconditions: function () {\n          return 'unset';\n        }\n      },\n      actions: [ // A list of action objects with ids\n        {\n          name: 'On', // Display name for the action\n          description: 'Turns the light on.', // Optional description\n          id: 'turn_light_on', // A unique id\n          schedule: 'at 9:00am', // Optional scheduling using later.js\n          event: 'Light turned on', // Optional event to emit when called.\n          function: function () {\n            // The implementation of the action.\n            return 'Light on.';\n          }\n        },\n        {\n          name: 'off',\n          id: 'turn_light_off',\n          schedule: 'at 8:30pm',\n          event: 'Light turned off',\n          function: function () {\n            return 'Light off.';\n          }\n        },\n        {\n          name: 'Log light data', // Events get a display name like actions\n          id: 'light_data', // Events also get an id that is unique to the device\n          type: 'light', // Currently need for visualization component... HACK.\n          template: 'sensor',\n          schedule: 'every 1 second', // Events should have a schedule option that determines how often to check for conditions.\n          function: function () {\n            // function should return the event to emit when it should be emited.\n            return 10;\n          }\n        }\n      ],\n      events: [\n        {\n          name: 'It\\'s dark.',\n          id: 'dark',\n          on: 'light_data', // Hook into an action.\n          function: function () {\n            return;\n          }\n        },\n        {\n          name: 'It\\'s light.',\n          id: 'light',\n          on: 'light_data', // Hook into an action.\n          function: function () {\n            return;\n          }\n        }\n      ]\n    };\n\n    global.thing2 = {\n      name: 'Light', // The display name for the thing.\n      id: 'Light',\n      username: 'YourUsernameHere', // The username of the account you want this device to be added to.\n      properties: { // These can be updated by the API.\n        state: 'off',\n        lightconditions: function () {\n          return 'unset';\n        }\n      },\n      actions: { // a list of action objects with keys\n        turn_light_on: {\n          name: 'On', // Display name for the action\n          description: 'Turns the light on.', // Optional description\n          schedule: 'at 9:00am', // Optional scheduling using later.js\n          event: 'Light turned on', // Optional event to emit when called.\n          function: function () {\n            // The implementation of the action.\n            return 'Light on.';\n          }\n        },\n        turn_light_off: {\n          name: 'off',\n          schedule: 'at 8:30pm',\n          event: 'Light turned off',\n          function: function () {\n            return 'Light off.';\n          }\n        },\n        light_data: {\n          name: 'Log light data', // Events get a display name like actions\n          type: 'light', // Currently need for visualization component... HACK.\n          template: 'sensor',\n          schedule: 'every 1 second', // Events should have a schedule option that determines how often to check for conditions.\n          function: function () {\n            return 10;\n          }\n        }\n      },\n      events: {\n        dark: {\n          name: 'It\\'s dark.',\n          on: 'light_data', // Hook into an action.\n          function: function () {\n            return;\n          }\n        },\n        light: {\n          name: 'It\\'s light.',\n          on: 'light_data',\n          function: function () {\n            return;\n          }\n        }\n      }\n    }\n  });\n\n  afterEach(function() {\n    delete global.thing1;\n    delete global.thing2;\n  });\n})();\n","const _ = require('underscore');\nconst later = require('meteor-later');\nconst EventEmitter = require('events');\n\n\n/**\n * Class representing a Thing. A Thing is an extension of [node's built-in EventEmitter class](https://nodejs.org/api/events.html).\n * @extends EventEmitter\n * @param {Object} config  an object containing properties, events, and/or actions.\n * @param {Function} callback  an optional callback\n * @return     A new thing object\n */\nclass Thing extends EventEmitter {\n  constructor(config, callback) {\n    super();\n\n    if (!config) {\n      throw new Error('Thing.js requires an config object.');\n    } else {\n      _.extend(this, config);\n    }\n\n    this.registerActions();\n    this.registerEvents();\n    this.registerProperties();\n\n    // Callback is optional. May be used for a start function.\n    if (!_.isUndefined(callback)) {\n      callback();\n    }\n  }\n\n  /**\n   * Run when the Thing is initialized. Starts any scheduled actions.\n   */\n  registerActions () {\n    this.scheduledActions = {};\n\n    if (!_.isUndefined(this.actions)) {\n      _.each(this.actions, (action, key, list) => {\n        if (!_.isUndefined(action.schedule)) {\n          this.startAction(key);\n        }\n      });\n    }\n  }\n\n  /**\n   * Run when the Thing is initialized. Starts listeners and schedules events.\n   */\n  registerEvents () {\n    this.scheduledEvents = {};\n\n    if (!_.isUndefined(this.events)) {\n      _.each(this.events, (event, key, list) => {\n        if (!_.isUndefined(event.schedule)) {\n          this.scheduleEvent(key);\n        }\n\n        if (!_.isUndefined(event.on)) {\n          this.on(event.on, () => {\n            event.function();\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * Initializes properties.\n   */\n  registerProperties () {\n    if (!_.isUndefined(this.properties)) {\n      for (var property in this.properties) {\n        // If the property is a function we initialize it.\n        if (typeof this.properties[property] === 'function') {\n          // Note this function should return property value.\n          this.properties[property] = this.properties[property]()\n        }\n      }\n    }\n  }\n\n  /**\n   * Get action object\n   * @param {String} ID  The key of the action object you want.\n   * @returns {Object}\n   */\n  getAction (ID) {\n    let action = {};\n    _.each(this.actions, (value, key, list) => {\n      if (key === ID) {\n        return action = value;\n      } else if (this.actions[key].id === ID) {\n        return action = value; \n      }\n    });\n\n    return action;\n  }\n\n  /**\n   * Get list of the Thing's actions\n   * @returns {Object}\n   */\n  getActions () {\n    return this.actions;\n  }  \n\n  /**\n   * Get event object\n   * @param {String} ID  The key / id of the event object you want.\n   * @returns {Object}\n   */\n  getEvent (ID) {\n    let event = {}\n    _.each(this.events, (value, key, list) => {\n      if (key === ID) {\n        return event = value;\n      } else if (this.events[key].id === ID) {\n        return event = value; \n      }\n    });\n\n    return event;\n  }\n\n  /**\n   * Get list of the Thing's events\n   * @returns {Object}\n   */\n  getEvents () {\n    return this.events;\n  }  \n\n  /**\n   * Update a property based on a component ID.\n   * @param {String} property The property of the component to be update.\n   * @param {String} value The value to update the property to.\n   */\n  setProperty (property, value) {\n    this.properties[property] = value;\n    this.emit('property-updated');\n  }\n\n  /* Get a property by key.\n   * @param {String} property\n   * @returns {String} property value.\n   */\n  getProperty (property) {\n    return this.properties[property];\n  }\n\n  /* Get a Thing's properties\n   * @returns {Object}\n   */\n  getProperties () {\n    return this.properties;\n  }\n\n  /**\n   * Calls a registered action, emits event if the the action has an 'event'\n   * property defined. Updates the state if the action has an 'updateState'\n   * property specified.\n   * @param      {String}  actionId The id of the action to call.\n   * @param      {Object}  options Optional, options to call with the function.\n   */\n  callAction (actionId, options) {\n    try {\n      let action = this.getAction(actionId);\n\n      if (!_.isUndefined(options)) {\n        var output = action.function(options);\n      }\n      else {\n        var output = action.function();\n      }\n      this.emit(actionId);\n\n      // We return any returns of called functions for testing.\n      if (!_.isUndefined(output)) {\n        return output;\n      }\n    }\n    catch (error) {\n      // If there is an error we emit an error.\n      return this.emit('error', error);\n    }\n\n  }\n\n  /**\n   * Starts a reoccurring action if a schedule property is defined.\n   * @param {Object} action An action object.\n   */\n  startAction (actionKey) {\n    let action = this.getAction(actionKey);\n    let schedule = later.parse.text(action.schedule);\n    let scheduledAction = later.setInterval(()=> {this.callAction(actionKey);}, schedule);\n    this.scheduledActions[actionKey] = scheduledAction;\n    return scheduledAction;\n  }\n\n  /**\n   * Starts a reoccurring event if a schedule property is defined.\n   * @param {Object} event An event object.\n   */\n  scheduleEvent (eventKey) {\n    let event = this.getEvent(eventKey)\n    let schedule = later.parse.text(event.schedule);\n    let scheduledEvent = later.setInterval(()=> {this.callEvent(eventKey);}, schedule);\n    this.scheduledEvents[eventKey] = scheduledEvent;\n    return scheduledEvent;\n  }\n};\n\nexport default Thing;\n","import Thing from '../../lib/Thing';\nconst _ = require('underscore');\n\ndescribe('Thing test', () => {\n  beforeEach(() => {\n    // global.testThing = new Thing(thing1);\n    global.testThing2 = new Thing(thing2);\n  });\n\n  it('should have cloned metadata', () => {\n    // expect(testThing.name).to.equal('Light');\n    // expect(testThing.id).to.equal('Light');\n    // expect(testThing.username).to.equal('YourUsernameHere');\n    expect(testThing2.name).to.equal('Light');\n    expect(testThing2.id).to.equal('Light');\n    expect(testThing2.username).to.equal('YourUsernameHere');\n  });\n\n  describe('ACTIONS', () => {\n    it('should register actions in the config object', () => {\n      // expect(_.allKeys(testThing.actions).length).to.equal(3);\n      expect(_.allKeys(testThing2.actions).length).to.equal(3);\n    });\n\n    it('should return the right action object when given an action id.', () => {\n      // var action = testThing.getAction('light_data');\n      var action2 = testThing2.getAction('light_data')\n      // console.log(action2);\n      // expect(action.name).to.equal('Log light data');\n      expect(action2.name).to.equal('Log light data');\n    });\n\n    it('should be able to call a registered action.', () => {\n      expect(testThing2.callAction('turn_light_on')).to.equal('Light on.');\n    });\n\n    it('should emit an event when an action is called', () => {\n      var event = false;\n      testThing2.on('turn_light_on', () => {\n        return event = true;\n      });\n      testThing2.callAction('turn_light_on');\n      expect(event).to.equal(true);\n    });\n  });\n\n  describe('EVENTS', () => {\n    it('should register events in the config object', () => {\n      expect(_.allKeys(testThing2.events).length).to.equal(2);\n    });\n\n    it('should return the right event object when given an id.', () => {\n      // var component = testThing.getEvent('dark');\n      var component2 = testThing2.getEvent('dark');\n      // expect(component.name).to.equal('It\\'s dark.');\n      expect(component2.name).to.equal('It\\'s dark.');\n    });\n  });\n\n  describe('PROPERTIES', () => {\n    // Maybe killing this...\n    // it('should update a component property correctly', () => {\n    //   testThing.updateComponentProperty('turn_light_on', 'schedule', 'at 9:30am')\n    //   expect(testThing.getAction('turn_light_on').schedule).to.equal('at 9:30am');\n    // });\n\n    // Note: testThing 2 has experimental support for properties\n    it('should initialize correctly', () => {\n      expect(testThing2.getProperty('lightconditions')).to.equal('unset');\n    });\n\n    // Note: testThing 2 has experimental support for properties\n    it('should set a property', () => {\n      testThing2.setProperty('lightconditions', 'dark');\n      expect(testThing2.getProperty('lightconditions')).to.equal('dark');\n    });\n\n    it('should emit an event when a property is set', () => {\n      var event = false;\n      testThing2.on('property-updated', () => {\n        return event = true;\n      });\n      testThing2.setProperty('lightconditions', 'light');\n      expect(testThing2.getProperty('lightconditions')).to.equal('light');\n      expect(event).to.equal(true);\n    });\n\n  });\n\n  afterEach(() => {\n    delete global.testThing2;\n  });\n});\n"],"names":["_"],"mappings":"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"}