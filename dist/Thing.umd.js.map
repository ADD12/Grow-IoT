{"version":3,"file":"Thing.umd.js","sources":["../lib/Thing.js"],"sourcesContent":["const _ = require('underscore');\nconst later = require('meteor-later');\nconst EventEmitter = require('events');\n\n\n/**\n * Class representing a Thing. A Thing is an extension of [node's built-in EventEmitter class](https://nodejs.org/api/events.html).\n * @extends EventEmitter\n * @param {Object} config  an object containing properties, events, and/or actions.\n * @param {Function} callback  an optional callback\n * @return     A new thing object\n */\nclass Thing extends EventEmitter {\n  constructor(config, callback) {\n    super();\n\n    if (!config) {\n      throw new Error('Thing.js requires an config object.');\n    } else {\n      _.extend(this, config);\n    }\n\n    this.registerActions();\n    this.registerEvents();\n    this.registerProperties();\n\n    // Callback is optional. May be used for a start function.\n    if (!_.isUndefined(callback)) {\n      callback();\n    }\n  }\n\n  /**\n   * Run when the Thing is initialized. Starts any scheduled actions.\n   */\n  registerActions () {\n    this.scheduledActions = {};\n\n    if (!_.isUndefined(this.actions)) {\n      _.each(this.actions, (action, key, list) => {\n        if (!_.isUndefined(action.schedule)) {\n          this.startAction(key);\n        }\n      });\n    }\n  }\n\n  /**\n   * Run when the Thing is initialized. Starts listeners and schedules events.\n   */\n  registerEvents () {\n    this.scheduledEvents = {};\n\n    if (!_.isUndefined(this.events)) {\n      _.each(this.events, (event, key, list) => {\n        if (!_.isUndefined(event.schedule)) {\n          this.scheduleEvent(key);\n        }\n\n        if (!_.isUndefined(event.on)) {\n          this.on(event.on, () => {\n            event.function();\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * Initializes properties.\n   */\n  registerProperties () {\n    if (!_.isUndefined(this.properties)) {\n      for (var property in this.properties) {\n        // If the property is a function we initialize it.\n        if (typeof this.properties[property] === 'function') {\n          // Note this function should return property value.\n          this.properties[property] = this.properties[property]()\n        }\n      }\n    }\n  }\n\n  /**\n   * Get action object\n   * @param {String} ID  The key of the action object you want.\n   * @returns {Object}\n   */\n  getAction (ID) {\n    let action = {};\n    _.each(this.actions, (value, key, list) => {\n      if (key === ID) {\n        return action = value;\n      } else if (this.actions[key].id === ID) {\n        return action = value; \n      }\n    });\n\n    return action;\n  }\n\n  /**\n   * Get list of the Thing's actions\n   * @returns {Object}\n   */\n  getActions () {\n    return this.actions;\n  }  \n\n  /**\n   * Get event object\n   * @param {String} ID  The key / id of the event object you want.\n   * @returns {Object}\n   */\n  getEvent (ID) {\n    let event = {}\n    _.each(this.events, (value, key, list) => {\n      if (key === ID) {\n        return event = value;\n      } else if (this.events[key].id === ID) {\n        return event = value; \n      }\n    });\n\n    return event;\n  }\n\n  /**\n   * Get list of the Thing's events\n   * @returns {Object}\n   */\n  getEvents () {\n    return this.events;\n  }  \n\n  /**\n   * Update a property based on a component ID.\n   * @param {String} property The property of the component to be update.\n   * @param {String} value The value to update the property to.\n   */\n  setProperty (property, value) {\n    this.properties[property] = value;\n    this.emit('property-updated');\n  }\n\n  /* Get a property by key.\n   * @param {String} property\n   * @returns {String} property value.\n   */\n  getProperty (property) {\n    return this.properties[property];\n  }\n\n  /* Get a Thing's properties\n   * @returns {Object}\n   */\n  getProperties () {\n    return this.properties;\n  }\n\n  /**\n   * Calls a registered action, emits event if the the action has an 'event'\n   * property defined. Updates the state if the action has an 'updateState'\n   * property specified.\n   * @param      {String}  actionId The id of the action to call.\n   * @param      {Object}  options Optional, options to call with the function.\n   */\n  callAction (actionId, options) {\n    try {\n      let action = this.getAction(actionId);\n\n      if (!_.isUndefined(options)) {\n        var output = action.function(options);\n      }\n      else {\n        var output = action.function();\n      }\n      this.emit(actionId);\n\n      // We return any returns of called functions for testing.\n      if (!_.isUndefined(output)) {\n        return output;\n      }\n    }\n    catch (error) {\n      // If there is an error we emit an error.\n      return this.emit('error', error);\n    }\n\n  }\n\n  /**\n   * Starts a reoccurring action if a schedule property is defined.\n   * @param {Object} action An action object.\n   */\n  startAction (actionKey) {\n    let action = this.getAction(actionKey);\n    let schedule = later.parse.text(action.schedule);\n    let scheduledAction = later.setInterval(()=> {this.callAction(actionKey);}, schedule);\n    return this.scheduledActions[actionKey] = scheduledAction;\n  }\n\n  /**\n   * Starts a reoccurring event if a schedule property is defined.\n   * @param {Object} event An event object.\n   */\n  scheduleEvent (eventKey) {\n    let event = this.getEvent(eventKey)\n    let schedule = later.parse.text(event.schedule);\n    let scheduledEvent = later.setInterval(()=> {this.callEvent(eventKey);}, schedule);\n    return this.scheduledEvents[eventKey] = scheduledEvent;\n  }\n};\n\nexport default Thing;\n"],"names":[],"mappings":"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"}