{"version":3,"file":"Thing.umd.js","sources":["../lib/actions.js","../lib/events.js","../lib/index.js"],"sourcesContent":["/**\n * # Actions\n * \n * Example:\n * ```\n *  \"actions\": [ // A list of action objects\n *     {\n *         \"name\": \"On\", // Display name for the action\n *         \"description\": \"Turns the light on.\", // Optional description\n *         \"id\": \"turn_light_on\", // A unique id\n *         \"updateState\": \"on\", // Updates state on function call\n *         \"schedule\": \"at 9:00am\", // Optional scheduling using later.js\n *         \"event\": \"Light turned on\", // Optional event to emit when called.\n *         \"function\": function () {\n *             // The implementation of the action.\n *             LED.high();\n *             console.log(\"Light on.\");\n *         }\n *     }\n *   ]\n * ```\n */\n\nconst _ = require('underscore');\nconst later = require('later');\n\nvar Actions = {\n  /**\n   * Registers actions and returns a new actions object\n   * @param {Object} thing  \n   * @return     A new grow instance.\n */\n  register (thing) {\n    this.actions = [];\n    this.scheduledActions = [];\n\n    // this.emit = thing.emit;\n\n    for (var key in thing) {\n      // Check top level thing model for actions.\n      if (key === 'actions') {\n        for (var action in thing[key]) {\n          this.actions.push(thing[key][action]);\n        }\n      }\n    }\n\n    for (var action in this.actions) {\n      var actionId = this.actions[action].id;\n      var action = this.getActionByID(actionId);\n      if (!_.isUndefined(action)) {\n        this.startAction(actionId);\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Get action object based on the action id\n   * @param {String} actionId  The id of the action object you want.\n   * @returns {Object}\n   */\n  getActionByID (actionId) {\n    for (var i = this.actions.length - 1; i >= 0; i--) {\n      if (this.actions[i].id === actionId) {\n        return this.actions[i];\n      }\n    }\n  },\n\n  /**\n   * Calls a registered action, emits event if the the action has an 'event'\n   * property defined. Updates the state if the action has an 'updateState'\n   * property specified.\n   * @param      {String}  actionId The id of the action to call.\n   * @param      {Object}  options Optional, options to call with the function.\n  */\n  callAction (actionId, options) {\n    var action = this.getActionByID(actionId);\n\n    this.emit(actionId)\n\n    if (!_.isUndefined(options)) {\n      return action.function(options);\n    }\n    else {\n      return action.function();\n    }\n  },\n\n  /**\n   * Starts a reoccurring action if a schedule property is defined.\n   * @param {Object} action An action object.\n   */\n  startAction (action) {\n    var meta = this.getActionByID(action);\n    if (!_.isUndefined(meta.schedule)) {\n      var schedule = later.parse.text(meta.schedule);\n      var scheduledAction = later.setInterval(()=> {this.callAction(action);}, schedule);\n      this.scheduledActions.push(scheduledAction);\n      return scheduledAction;\n    }\n  }\n};\n\nexport default Actions;\n","/**\n * # Events\n * Events are functions that return a value to emit as event or doesn't return \n   (in which case no event is emitted). \n\n * NOTE: Events currently run like jobs and so REQUIRE a schedule property. \n   This is not nice, let's rewrite.\n \n * The \"events\" property of the thing object takes a list of event objects. For example:\n\n        \"events\": [\n            {\n                \"name\": \"Light data\",\n                \"id\": \"light_data\",\n                \"schedule\": \"every 1 second\",\n                \"function\": function () {\n                    // function should return the event to emit when it should be emited.\n                    return lightSensor.value;\n                }\n            }\n        ]\n */\n\nconst _ = require('underscore');\nconst later = require('later');\n\nclass Events {\n  /**\n   * Register a new events object.\n   * @param {Object} thing  \n   * @return     A new events object\n */\n  constructor (thing) {\n    this.events = [];\n    this.scheduledEvents = [];\n\n    this.emit = thing.emit;\n\n    for (var key in thing) {\n      // Check top level thing model for events.\n      if (key === 'events') {\n        for (var event in thing[key]) {\n          this.events.push(thing[key][event]);\n        }\n      }\n    }\n\n    for (var event in this.events) {\n      var eventId = this.events[event].id;\n      var event = this.getEventByID(eventId);\n      if (!_.isUndefined(event)) {\n        this.startEvent(eventId);\n      }\n    }\n  }\n\n  /**\n   * Get event object based on the event id\n   * @param {String} eventId  The id of the event object you want.\n   * @returns {Object}\n   */\n  getEventByID (eventId) {\n    for (var i = this.events.length - 1; i >= 0; i--) {\n      if (this.events[i].id === eventId) {\n        return this.events[i];\n      }\n    }\n  }\n\n  /**\n   * Calls a registered event function.\n   * @param      {String}  eventId The id of the event to call.\n   * @param      {Object}  options Optional, options to call with the function.\n  */\n  callEvent (eventId, options) {\n    var event = this.getEventByID(eventId);\n\n    this.emit(eventId);\n\n    if (!_.isUndefined(options)) {\n      return event.function(options);\n    }\n    else {\n      return event.function();\n    }\n  }\n\n  /**\n   * Starts a reoccurring event if a schedule property is defined.\n   * @param {Object} event An event object.\n   */\n  startEvent (event) {\n    var meta = this.getEventByID(event);\n    if (!_.isUndefined(meta.schedule)) {\n      var schedule = later.parse.text(meta.schedule);\n      var scheduledEvent = later.setInterval(()=> {this.callEvent(event);}, schedule);\n      this.scheduledEvents.push(scheduledEvent);\n      return scheduledEvent;\n    }\n  }\n};\n\nexport default Events;\n","import Actions from './actions';\nimport Events from './events';\n\nconst _ = require('underscore')\nconst EventEmitter = require('events');\n\nclass Thing extends EventEmitter {\n  /**\n   * Constructs a new thing object.\n   * @param {Object} config\n   * @return     A new events object\n  */\n  constructor(config) {\n    super();\n\n    if (!config) {\n      throw new Error('Thing.js requires an config object.');\n    } else {\n      _.extend(this, config);\n    }\n\n    // Register actions events\n    Actions.register(this);\n    this.events = new Events(this);\n  }\n};\n\nexport default Thing;\n"],"names":["_","later"],"mappings":"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"}