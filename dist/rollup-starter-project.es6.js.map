{"version":3,"file":"rollup-starter-project.es6.js","sources":["../lib/actions.js","../lib/events.js","../lib/index.js"],"sourcesContent":["/**\n * # Actions\n * \n * Example:\n * ```\n *  \"actions\": [ // A list of action objects\n *     {\n *         \"name\": \"On\", // Display name for the action\n *         \"description\": \"Turns the light on.\", // Optional description\n *         \"id\": \"turn_light_on\", // A unique id\n *         \"updateState\": \"on\", // Updates state on function call\n *         \"schedule\": \"at 9:00am\", // Optional scheduling using later.js\n *         \"event\": \"Light turned on\", // Optional event to emit when called.\n *         \"function\": function () {\n *             // The implementation of the action.\n *             LED.high();\n *             console.log(\"Light on.\");\n *         }\n *     }\n *   ]\n * ```\n */\n\nconst _ = require('underscore');\nconst later = require('later');\n\nvar Actions = {\n  /**\n   * Registers actions and returns a new actions object\n   * @param {Object} config  \n   * @return     A new grow instance.\n */\n  register (config) {\n    this.actions = [];\n    this.scheduledActions = [];\n\n    for (var key in config) {\n      // Check top level thing model for actions.\n      if (key === 'actions') {\n        for (var action in config[key]) {\n          this.actions.push(config[key][action]);\n        }\n      }\n    }\n\n    for (var action in this.actions) {\n      var actionId = this.actions[action].id;\n      var action = this.getActionByID(actionId);\n      if (!_.isUndefined(action)) {\n        this.startAction(actionId);\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Get action object based on the action id\n   * @param {String} actionId  The id of the action object you want.\n   * @returns {Object}\n   */\n  getActionByID (actionId) {\n    for (var i = this.actions.length - 1; i >= 0; i--) {\n      if (this.actions[i].id === actionId) {\n        return this.actions[i];\n      }\n    }\n  },\n\n  /**\n   * Calls a registered action, emits event if the the action has an 'event'\n   * property defined. Updates the state if the action has an 'updateState'\n   * property specified.\n   * @param      {String}  actionId The id of the action to call.\n   * @param      {Object}  options Optional, options to call with the function.\n  */\n  callAction (actionId, options) {\n    var action = this.getActionByID(actionId);\n\n    if (!_.isUndefined(options)) {\n      return action.function(options);\n    }\n    else {\n      return action.function();\n    }\n  },\n\n  /**\n   * Starts a reoccurring action if a schedule property is defined.\n   * @param {Object} action An action object.\n   */\n  startAction (action) {\n    var meta = this.getActionByID(action);\n    if (!_.isUndefined(meta.schedule)) {\n      var schedule = later.parse.text(meta.schedule);\n      var scheduledAction = later.setInterval(function() {this.callAction(action);}, schedule);\n      this.scheduledActions.push(scheduledAction);\n      return scheduledAction;\n    }\n  }\n};\n\nexport default Actions;\n","/**\n * # Events\n * Events are functions that return a value to emit as event or doesn't return \n   (in which case no event is emitted). \n\n * NOTE: Events currently run like jobs and so REQUIRE a schedule property. \n   This is not nice, let's rewrite.\n \n * The \"events\" property of the config object takes a list of event objects. For example:\n\n        \"events\": [\n            {\n                \"name\": \"Light data\",\n                \"id\": \"light_data\",\n                \"schedule\": \"every 1 second\",\n                \"function\": function () {\n                    // function should return the event to emit when it should be emited.\n                    return lightSensor.value;\n                }\n            }\n        ]\n */\n\nconst _ = require('underscore');\nconst later = require('later');\n\nvar Events = {\n  /**\n   * Register a new events object.\n   * @param {Object} config  \n   * @return     A new events object\n */\n  register (config) {\n    this.events = [];\n    this.scheduledEvents = [];\n\n    for (var key in config) {\n      // Check top level thing model for events.\n      if (key === 'events') {\n        for (var event in config[key]) {\n          this.events.push(config[key][event]);\n        }\n      }\n    }\n\n    for (var event in this.events) {\n      var eventId = this.events[event].id;\n      var event = this.getEventByID(eventId);\n      if (!_.isUndefined(event)) {\n        this.startEvent(eventId);\n      }\n    }\n\n    return this;\n  },\n\n  // THOUGHT: since this is the same for actions an events, could it just be 'getComponentById'?\n  /**\n   * Get event object based on the event id\n   * @param {String} eventId  The id of the event object you want.\n   * @returns {Object}\n   */\n  getEventByID (eventId) {\n    for (var i = this.events.length - 1; i >= 0; i--) {\n      if (this.events[i].id === eventId) {\n        return this.events[i];\n      }\n    }\n  },\n\n  /**\n   * Calls a registered event, emits event if the the event has an 'event'\n   * property defined. Updates the state if the event has an 'updateState'\n   * property specified.\n   * @param      {String}  eventId The id of the event to call.\n   * @param      {Object}  options Optional, options to call with the function.\n  */\n  callEvent (eventId, options) {\n    var event = this.getEventByID(eventId);\n\n    if (!_.isUndefined(options)) {\n      return event.function(options);\n    }\n    else {\n      return event.function();\n    }\n  },\n\n  /**\n   * Starts a reoccurring event if a schedule property is defined.\n   * @param {Object} event An event object.\n   */\n  startEvent (event) {\n    var meta = this.getEventByID(event);\n    if (!_.isUndefined(meta.schedule)) {\n      var schedule = later.parse.text(meta.schedule);\n      var scheduledEvent = later.setInterval(function() {this.callEvent(event);}, schedule);\n      this.scheduledEvents.push(scheduledEvent);\n      return scheduledEvent;\n    }\n  }\n};\n\nexport default Events;\n","import Actions from './actions';\nimport Events from './events';\n\nconst _ = require('underscore')\n\n\nclass Thing {\n  /**\n   * Constructs a new thing object.\n   * @param {Object} config  \n   * @return     A new events object\n  */\n  constructor(config) {\n    if (!config) {\n      throw new Error('Thing.js requires an config object.');\n    } else {\n      _.extend(this, config);\n    }\n\n    try {\n      // We need the methods defined in the config, so we _.extend state.json.\n      var state = require('./state.json');\n      _.extend(this, state);\n    } catch (err) {\n      // Do nothing.\n    }\n\n    // Register actions events\n    this.actions = Actions.register(config);\n    this.events = Events.register(config);\n  }\n};\n\nexport default Thing;\n"],"names":["_","later"],"mappings":"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"}